{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ui/footer/footer.component.html","webpack:///./src/app/ui/footer/footer.component.ts","webpack:///./src/app/ui/header/header.component.html","webpack:///./src/app/ui/header/header.component.ts","webpack:///./src/app/ui/people-emails/people-emails-routing.module.ts","webpack:///./src/app/ui/people-emails/people-emails.component.html","webpack:///./src/app/ui/people-emails/people-emails.component.ts","webpack:///./src/app/ui/people/people-routing.module.ts","webpack:///./src/app/ui/people/people.component.html","webpack:///./src/app/ui/people/people.component.ts","webpack:///./src/app/ui/people/people.service.ts","webpack:///./src/app/ui/ui.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  { path: '', pathMatch: 'full', redirectTo: '/level1'},\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<app-header></app-header>\\n<div>\\n<router-outlet></router-outlet>\\n</div>\\n<app-footer></app-footer>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html'\n})\nexport class AppComponent {\n  title = 'people';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpModule } from '@angular/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { UiModule } from './ui/ui.module';\nimport { PeopleService } from './ui/people/people.service';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpModule,\n    UiModule\n  ],\n  providers: [PeopleService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mt-5\\\">\\n  <div class=\\\"navbar-expand m-auto navbar-text\\\">\\n    <p>jenschiavone@comcast.net</p>\\n  </div>\\n</nav>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html'\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<nav class=\\\"navbar navbar-dark bg-dark mb-5\\\">\\n  <a class=\\\"navbar-brand\\\" href=\\\"/\\\">The People App</a>\\n  <div class=\\\"navbar-expand mr-auto\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      <a class=\\\"nav-item nav-link active\\\" routerLink = \\\"/level1\\\">Level 1</a>\\n      <a class=\\\"nav-item nav-link active\\\" routerLink = \\\"/level2\\\">Level 2</a>\\n    </div>\\n  </div>\\n  <div class=\\\"navbar-expand ml-auto navbar-nav\\\">\\n    <div class=\\\"navbar-nav\\\">\\n      \\n    </div>\\n  </div>\\n</nav>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PeopleEmailsComponent } from './people-emails.component';\n\n\nconst routes: Routes = [\n  { path: 'level2', component: PeopleEmailsComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PeopleEmailsRoutingModule { }","module.exports = \"<p>\\n  people-emails works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-people-emails',\n  templateUrl: './people-emails.component.html'\n})\nexport class PeopleEmailsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { PeopleComponent } from './people.component';\n\n\nconst routes: Routes = [\n  { path: 'level1', component: PeopleComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class PeopleRoutingModule { }","module.exports = \"<div>\\n  <ng-container>\\n  \\t<table class=\\\"table\\\">\\n  \\t\\t<thead class=\\\"thead-dark\\\">\\n  \\t\\t\\t<th>Name</th> \\t\\t\\t\\n  \\t\\t\\t<th>Email Address</th>\\n  \\t\\t\\t<th>Job Title</th>\\n  \\t\\t</thead>\\n  \\t\\t<tr *ngFor=\\\"let person of people\\\">\\n  \\t\\t\\t<td>{{ person.display_name }}</td>\\n  \\t\\t\\t<td>{{ person.email_address }}</td>\\n  \\t\\t\\t<td>{{ person.job_title }}</td>\\n  \\t\\t</tr>\\n  \\t</table>\\n  </ng-container>  \\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport 'rxjs/add/operator/map';\n\nimport { Person } from './person';\nimport { PeopleService } from './people.service';\n\n@Component({\n  selector: 'app-people',\n  templateUrl: './people.component.html'\n})\nexport class PeopleComponent implements OnInit {\n\n  people: Person[];\n\n  constructor(private peopleService: PeopleService) { }\n\n  ngOnInit() {\n    this.peopleService.getPeople().subscribe(people => this.people = people)\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Rx';\nimport { environment } from '../../../environments/environment';\n\nimport { Person } from './person';\n\n@Injectable()\nexport class PeopleService {\n\n  private peopleUrl = environment.peopleApiBaseUrl;\n\n  constructor(private http: Http) {\n    this.getPeople\n  }\n\n  getPeople(): Observable<Person[]> {\n    return this.http.get(this.peopleUrl)\n                    .map((response: Response) => <Person[]>response.json())\n  }\n}","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { PeopleComponent } from './people/people.component';\nimport { PeopleService } from './people/people.service';\n\nimport { PeopleRoutingModule } from './people/people-routing.module';\nimport { PeopleEmailsRoutingModule } from './people-emails/people-emails-routing.module';\nimport { PeopleEmailsComponent } from './people-emails/people-emails.component';\n\n\n@NgModule({\n  declarations: [\n    HeaderComponent,\n    FooterComponent,\n    PeopleComponent,\n    PeopleEmailsComponent\n    ],\n  imports: [\n    CommonModule,\n    PeopleRoutingModule,\n    PeopleEmailsRoutingModule\n  ],\n  exports: [\n  PeopleComponent,\n  HeaderComponent,\n  FooterComponent\n  ],\n  providers: [PeopleService]\n})\nexport class UiModule { }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  peopleApiBaseUrl: 'http://localhost:3000/'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}